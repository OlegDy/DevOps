

Локальные зеркала для Terraform и Packer
https://cloud.yandex.ru/blog/posts/2022/03/terraform-and-packer

Начало работы с Packer
https://cloud.yandex.ru/docs/tutorials/infrastructure-management/packer-quickstart

curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash

https://oauth.yandex.ru/client/556e4666195344c2a1fa326fcab1b27a
https://cloud.yandex.ru/docs/iam/concepts/authorization/oauth-token

y0_AgAAAABlnOOLAATuwQAAAADTVmi9K0sOhwYVSseUOJsvb8LYXAERVZs


root@server1:/home/vagrant/yandex-cloud# yc init
Welcome! This command will take you through the configuration process.
Pick desired action:
 [1] Re-initialize this profile 'default' with new settings
 [2] Create a new profile
Please enter your numeric choice: 1
Please go to https://oauth.yandex.ru/authorize?response_type=token&client_id=1a6990aa636648e9b2ef855fa7bec2fb in order to obtain OAuth token.

Please enter OAuth token: y0_AgAAAABlnOOLAATuwQAAAADTVmi9K0sOhwYVSseUOJsvb8LYXAERVZs
You have one cloud available: 'cloud-olegdydevops' (id = b1gsgm9sgeu33apcbo2u). It is going to be used by default.
Please choose folder to use:
 [1] default (id = b1gft0uc6bptguk1tekv)
 [2] Create a new folder
Please enter your numeric choice: 1
Your current folder has been set to 'default' (id = b1gft0uc6bptguk1tekv).
Do you want to configure a default Compute zone? [Y/n] y
Which zone do you want to use as a profile default?
 [1] ru-central1-a
 [2] ru-central1-b
 [3] ru-central1-c
 [4] Don't set default zone
Please enter your numeric choice: 1
Your profile default Compute zone has been set to 'ru-central1-a'.


curl -sSL https://hashicorp-releases.yandexcloud.net/packer/1.8.4/packer_1.8.4_linux_386.zip -o packer_1.8.4_linux_386.zip

yc config list
yc compute image list

root@server1:/home/vagrant# yc config list
token: y0_AgAAAABlnOOLAATuwQAAAADTVmi9K0sOhwYVSseUOJsvb8LYXAERVZs
cloud-id: b1gsgm9sgeu33apcbo2u
folder-id: b1gft0uc6bptguk1tekv
compute-default-zone: ru-central1-a
root@server1:/home/vagrant# yc compute image list
+----+------+--------+-------------+--------+
| ID | NAME | FAMILY | PRODUCT IDS | STATUS |
+----+------+--------+-------------+--------+
+----+------+--------+-------------+--------+


yc vpc network create --name net --labels my-label=netology --description "my first network via yc"

root@server1:/home/vagrant# yc vpc network create --name net --labels my-label=netology --description "my first network via yc"
id: enphqflck0mr4r90c3bi
folder_id: b1gft0uc6bptguk1tekv
created_at: "2022-11-08T01:08:27Z"
name: net
description: my first network via yc
labels:
  my-label: netology

yc vpc subnet create --name my-subnet-a --zone ru-central1-a --range 10.1.2.0/24 --network-name net --description "my first subnet via yc"

root@server1:/home/vagrant# yc vpc subnet create --name my-subnet-a --zone ru-central1-a --range 10.1.2.0/24 --network-name net --description "my first subnet via yc"
id: e9br7aljfd0g05hmuk96
folder_id: b1gft0uc6bptguk1tekv
created_at: "2022-11-08T01:09:30Z"
name: my-subnet-a
description: my first subnet via yc
network_id: enphqflck0mr4r90c3bi
zone_id: ru-central1-a
v4_cidr_blocks:
  - 10.1.2.0/24


packer validate centos-7-base.json
packer build centos-7-base.json

packer validate centos8.json
packer build centos8.json

/home/vagrant/src/packer/centos8.json
{
  "builders": [
    {
      "type": "yandex",
      "folder_id": "b1gft0uc6bptguk1tekv",
      "disk_type": "network-ssd",
      "zone": "ru-central1-a",
      "image_family": "centos",
      "image_name": "centos-7-base",
      "source_image_family": "centos-7",
      "image_description": "by packer",
      "subnet_id": "e9br7aljfd0g05hmuk96",
      "use_ipv4_nat": true,
      "token": "y0_AgAAAABlnOOLAATuwQAAAADTVmi9K0sOhwYVSseUOJsvb8LYXAERVZs",
      "ssh_username": "centos"
    }
  ]
}



root@server1:/home/vagrant/src/packer#
packer build centos8.json
yandex: output will be in this color.

==> yandex: Creating temporary RSA SSH key for instance...
==> yandex: Using as source image: fd88d14a6790do254kj7 (name: "centos-7-v20220620", family: "centos-7")
==> yandex: Use provided subnet id e9br7aljfd0g05hmuk96
==> yandex: Creating disk...
==> yandex: Creating instance...
==> yandex: Waiting for instance with id fhmfhrch35r8bkkd99rm to become active...
    yandex: Detected instance IP: 158.160.38.72
==> yandex: Using SSH communicator to connect: 158.160.38.72
==> yandex: Waiting for SSH to become available...
==> yandex: Connected to SSH!
==> yandex: Stopping instance...
==> yandex: Deleting instance...
    yandex: Instance has been deleted!
==> yandex: Creating image: centos-7-base
==> yandex: Waiting for image to complete...
==> yandex: Success image create...
==> yandex: Destroying boot disk...
    yandex: Disk has been deleted!
Build 'yandex' finished after 1 minute 46 seconds.

==> Wait completed after 1 minute 46 seconds

==> Builds finished. The artifacts of successful builds are:
--> yandex: A disk image was created: centos-7-base (id: fd8m1n6bci1s7ubc0f68) with family name centos


Начало работы с Terraform
https://cloud.yandex.ru/docs/tutorials/infrastructure-management/terraform-quickstart#install-terraform

curl -sSL https://hashicorp-releases.yandexcloud.net/terraform/1.3.4/terraform_1.3.4_linux_386.zip -o terraform_1.3.4_linux_386.zip


yc iam service-account create --name sa-terraform

root@server1:/home/vagrant/src/terraform# yc --version
Yandex Cloud CLI 0.97.0 linux/amd64
root@server1:/home/vagrant/src/terraform# yc config list
token: y0_AgAAAABlnOOLAATuwQAAAADTVmi9K0sOhwYVSseUOJsvb8LYXAERVZs
cloud-id: b1gsgm9sgeu33apcbo2u
folder-id: b1gft0uc6bptguk1tekv
compute-default-zone: ru-central1-a
root@server1:/home/vagrant/src/terraform# yc iam service-account create --name sa-terraform
id: ajeb8r1r142ovleo0ibr
folder_id: b1gft0uc6bptguk1tekv
created_at: "2022-11-08T04:55:56.261271367Z"
name: sa-terraform


yc iam service-account list
    root@server1:/home/vagrant/src/terraform# yc iam service-account list
    +----------------------+--------------+
    |          ID          |     NAME     |
    +----------------------+--------------+
    | ajeb8r1r142ovleo0ibr | sa-terraform |
    | ajelmbepfq1hqgk5pu45 | editor       |
    +----------------------+--------------+


yc resource-manager cloud add-access-binding b1gsgm9sgeu33apcbo2u --role resource-manager.clouds.owner --subject serviceAccount:ajeb8r1r142ovleo0ibr

yc resource-manager folder add-access-binding b1gft0uc6bptguk1tekv --role admin --subject serviceAccount:ajeb8r1r142ovleo0ibr

    yc <service-name> <resource> add-access-binding <resource-name>|<resource-id> \
      --role <role-id> \
      --subject serviceAccount:<service-account-id>

      Где:

    <service-name> — название сервиса, на чей ресурс назначается роль, например resource-manager.
    <resource> — категория ресурса, например cloud.
    <resource-name> — имя ресурса. Вы можете указать ресурс по имени или идентификатору. b1gsgm9sgeu33apcbo2u
    <resource-id> — идентификатор ресурса.
    <role-id> — назначаемая роль, например resource-manager.clouds.owner.
    <service-account-id> — идентификатор сервисного аккаунта, которому назначается роль.

yc iam key create --service-account-id ajeb8r1r142ovleo0ibr --folder-name default --output key.json

    root@server1:/home/vagrant/src/terraform# yc iam key create --service-account-id ajeb8r1r142ovleo0ibr --folder-name default --output key.json
    id: ajemarmfvvppj3n852n0
    service_account_id: ajeb8r1r142ovleo0ibr
    created_at: "2022-11-08T05:16:48.180569515Z"
    key_algorithm: RSA_2048


yc config profile create sa-terraform
    root@server1:/home/vagrant/src/terraform# yc config profile create sa-terraform
    Profile 'sa-terraform' created and activated

yc config set service-account-key key.json
yc config set cloud-id b1gsgm9sgeu33apcbo2u
yc config set folder-id b1gft0uc6bptguk1tekv

export YC_TOKEN=$(yc iam create-token)
export YC_CLOUD_ID=$(yc config get cloud-id)
export YC_FOLDER_ID=$(yc config get folder-id)



root@server1:/home/vagrant/src/terraform# terraform init

        Initializing the backend...

        Initializing provider plugins...
        - Finding latest version of yandex-cloud/yandex...
        - Installing yandex-cloud/yandex v0.81.0...
        - Installed yandex-cloud/yandex v0.81.0 (unauthenticated)

        Terraform has created a lock file .terraform.lock.hcl to record the provider
        selections it made above. Include this file in your version control repository
        so that Terraform can guarantee to make the same selections by default when
        you run "terraform init" in the future.

        ╷
        │ Warning: Incomplete lock file information for providers
        │
        │ Due to your customized provider installation methods, Terraform was forced to calculate lock file checksums locally for the following providers:
        │   - yandex-cloud/yandex
        │
        │ The current .terraform.lock.hcl file only includes checksums for linux_386, so Terraform running on another platform will fail to install these providers.
        │
        │ To calculate additional checksums for another platform, run:
        │   terraform providers lock -platform=linux_amd64
        │ (where linux_amd64 is the platform to generate)
        ╵

        Terraform has been successfully initialized!

        You may now begin working with Terraform. Try running "terraform plan" to see
        any changes that are required for your infrastructure. All Terraform commands
        should now work.

        If you ever set or change modules or backend configuration for Terraform,
        rerun this command to reinitialize your working directory. If you forget, other
        commands will detect it and remind you to do so if necessary.


terraform validate
terraform apply
        yandex_vpc_network.default: Creating...
        yandex_vpc_network.default: Creation complete after 2s [id=enp8slmge9l5seiddhgo]
        yandex_vpc_subnet.default: Creating...
        yandex_vpc_subnet.default: Creation complete after 1s [id=e9b5554p57lcdtpmukfq]
        yandex_compute_instance.node01: Creating...
        yandex_compute_instance.node01: Still creating... [10s elapsed]
        yandex_compute_instance.node01: Still creating... [20s elapsed]
        yandex_compute_instance.node01: Still creating... [30s elapsed]
        yandex_compute_instance.node01: Still creating... [40s elapsed]
        yandex_compute_instance.node01: Still creating... [50s elapsed]
        yandex_compute_instance.node01: Creation complete after 55s [id=fhmhp2r0gfujodt6hu32]

        Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

        Outputs:

        external_ip_address_node01_yandex_cloud = "158.160.32.231"
        internal_ip_address_node01_yandex_cloud = "192.168.101.10"